{"ast":null,"code":"class LancheService {\n  constructor() {\n    // Aqui você pode inicializar variáveis ​​ou fazer outras inicializações necessárias\n    this.lanches = [];\n    this.nextId = 1; // Variável para gerar IDs únicos para lanches\n  }\n\n  // Operação Create: Adicionar um novo lanche\n  createLanche(lanche) {\n    lanche.id = this.nextId++; // Atribuir um novo ID ao lanche\n    this.lanches.push(lanche);\n    return lanche;\n  }\n\n  // Operação ReadAll: Obter todos os lanches\n  getAllLanches() {\n    return this.lanches;\n  }\n\n  // Operação ReadOneById: Obter um único lanche pelo ID\n  getLancheById(id) {\n    return this.lanches.find(lanche => lanche.id === id);\n  }\n\n  // Operação UpdateById: Atualizar um lanche pelo ID\n  updateLancheById(id, updatedLanche) {\n    const index = this.lanches.findIndex(lanche => lanche.id === id);\n    if (index !== -1) {\n      this.lanches[index] = {\n        ...updatedLanche,\n        id\n      }; // Atualizar o lanche na posição encontrada\n      return this.lanches[index];\n    }\n    return null; // Retornar null se o lanche não for encontrado\n  }\n\n  // Operação DeleteById: Excluir um lanche pelo ID\n  deleteLancheById(id) {\n    const index = this.lanches.findIndex(lanche => lanche.id === id);\n    if (index !== -1) {\n      const deletedLanche = this.lanches.splice(index, 1)[0]; // Remover o lanche da lista\n      return deletedLanche;\n    }\n    return null; // Retornar null se o lanche não for encontrado\n  }\n}\n\n// Exemplo de uso:\nconst lancheService = new LancheService();\nlancheService.createLanche({\n  nome: \"Hambúrguer\",\n  preco: 10\n});\nlancheService.createLanche({\n  nome: \"Pizza\",\n  preco: 20\n});\nconsole.log(lancheService.getAllLanches());\nconsole.log(lancheService.getLancheById(1));\nlancheService.updateLancheById(1, {\n  nome: \"Hambúrguer Duplo\",\n  preco: 15\n});\nconsole.log(lancheService.getAllLanches());\nconsole.log(lancheService.deleteLancheById(2));\nconsole.log(lancheService.getAllLanches());","map":{"version":3,"names":["LancheService","constructor","lanches","nextId","createLanche","lanche","id","push","getAllLanches","getLancheById","find","updateLancheById","updatedLanche","index","findIndex","deleteLancheById","deletedLanche","splice","lancheService","nome","preco","console","log"],"sources":["C:/Users/35443/Desktop/lista2filipereact/Lista2/src/services/LancheService.js"],"sourcesContent":["class LancheService {\r\n    constructor() {\r\n        // Aqui você pode inicializar variáveis ​​ou fazer outras inicializações necessárias\r\n        this.lanches = [];\r\n        this.nextId = 1; // Variável para gerar IDs únicos para lanches\r\n    }\r\n\r\n    // Operação Create: Adicionar um novo lanche\r\n    createLanche(lanche) {\r\n        lanche.id = this.nextId++; // Atribuir um novo ID ao lanche\r\n        this.lanches.push(lanche);\r\n        return lanche;\r\n    }\r\n\r\n    // Operação ReadAll: Obter todos os lanches\r\n    getAllLanches() {\r\n        return this.lanches;\r\n    }\r\n\r\n    // Operação ReadOneById: Obter um único lanche pelo ID\r\n    getLancheById(id) {\r\n        return this.lanches.find(lanche => lanche.id === id);\r\n    }\r\n\r\n    // Operação UpdateById: Atualizar um lanche pelo ID\r\n    updateLancheById(id, updatedLanche) {\r\n        const index = this.lanches.findIndex(lanche => lanche.id === id);\r\n        if (index !== -1) {\r\n            this.lanches[index] = { ...updatedLanche, id }; // Atualizar o lanche na posição encontrada\r\n            return this.lanches[index];\r\n        }\r\n        return null; // Retornar null se o lanche não for encontrado\r\n    }\r\n\r\n    // Operação DeleteById: Excluir um lanche pelo ID\r\n    deleteLancheById(id) {\r\n        const index = this.lanches.findIndex(lanche => lanche.id === id);\r\n        if (index !== -1) {\r\n            const deletedLanche = this.lanches.splice(index, 1)[0]; // Remover o lanche da lista\r\n            return deletedLanche;\r\n        }\r\n        return null; // Retornar null se o lanche não for encontrado\r\n    }\r\n}\r\n\r\n// Exemplo de uso:\r\nconst lancheService = new LancheService();\r\nlancheService.createLanche({ nome: \"Hambúrguer\", preco: 10 });\r\nlancheService.createLanche({ nome: \"Pizza\", preco: 20 });\r\nconsole.log(lancheService.getAllLanches());\r\nconsole.log(lancheService.getLancheById(1));\r\nlancheService.updateLancheById(1, { nome: \"Hambúrguer Duplo\", preco: 15 });\r\nconsole.log(lancheService.getAllLanches());\r\nconsole.log(lancheService.deleteLancheById(2));\r\nconsole.log(lancheService.getAllLanches());\r\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACV;IACA,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;EACrB;;EAEA;EACAC,YAAYA,CAACC,MAAM,EAAE;IACjBA,MAAM,CAACC,EAAE,GAAG,IAAI,CAACH,MAAM,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACD,OAAO,CAACK,IAAI,CAACF,MAAM,CAAC;IACzB,OAAOA,MAAM;EACjB;;EAEA;EACAG,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACN,OAAO;EACvB;;EAEA;EACAO,aAAaA,CAACH,EAAE,EAAE;IACd,OAAO,IAAI,CAACJ,OAAO,CAACQ,IAAI,CAACL,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKA,EAAE,CAAC;EACxD;;EAEA;EACAK,gBAAgBA,CAACL,EAAE,EAAEM,aAAa,EAAE;IAChC,MAAMC,KAAK,GAAG,IAAI,CAACX,OAAO,CAACY,SAAS,CAACT,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKA,EAAE,CAAC;IAChE,IAAIO,KAAK,KAAK,CAAC,CAAC,EAAE;MACd,IAAI,CAACX,OAAO,CAACW,KAAK,CAAC,GAAG;QAAE,GAAGD,aAAa;QAAEN;MAAG,CAAC,CAAC,CAAC;MAChD,OAAO,IAAI,CAACJ,OAAO,CAACW,KAAK,CAAC;IAC9B;IACA,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;EACAE,gBAAgBA,CAACT,EAAE,EAAE;IACjB,MAAMO,KAAK,GAAG,IAAI,CAACX,OAAO,CAACY,SAAS,CAACT,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKA,EAAE,CAAC;IAChE,IAAIO,KAAK,KAAK,CAAC,CAAC,EAAE;MACd,MAAMG,aAAa,GAAG,IAAI,CAACd,OAAO,CAACe,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD,OAAOG,aAAa;IACxB;IACA,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ;;AAEA;AACA,MAAME,aAAa,GAAG,IAAIlB,aAAa,CAAC,CAAC;AACzCkB,aAAa,CAACd,YAAY,CAAC;EAAEe,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAG,CAAC,CAAC;AAC7DF,aAAa,CAACd,YAAY,CAAC;EAAEe,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAG,CAAC,CAAC;AACxDC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACV,aAAa,CAAC,CAAC,CAAC;AAC1Ca,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACT,aAAa,CAAC,CAAC,CAAC,CAAC;AAC3CS,aAAa,CAACP,gBAAgB,CAAC,CAAC,EAAE;EAAEQ,IAAI,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAG,CAAC,CAAC;AAC1EC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACV,aAAa,CAAC,CAAC,CAAC;AAC1Ca,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACH,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC9CM,OAAO,CAACC,GAAG,CAACJ,aAAa,CAACV,aAAa,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}