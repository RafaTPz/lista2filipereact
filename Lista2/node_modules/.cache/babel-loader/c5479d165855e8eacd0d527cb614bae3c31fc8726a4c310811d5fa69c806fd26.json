{"ast":null,"code":"import axiosInstance from \"../utils/axios\";\nconst getLancheById = async id => {\n  const res = await axiosInstance.get('/lanches/' + id);\n  return res.data;\n};\nconst getAllLanches = async () => {\n  const res = await axiosInstance.get('/lanches');\n  return res.data;\n};\nconst createLanche = async newLancheData => {\n  try {\n    const allLanches = await getAllLanches();\n    const lastLanche = allLanches[allLanches.length - 1];\n    const nextId = lastLanche ? parseInt(lastLanche.id) + 1 : 1;\n    const res = await axiosInstance.post('/lanches', {\n      id: String(nextId),\n      ...newLancheData\n    });\n    return res.data;\n  } catch (error) {\n    throw new Error('Erro ao criar lanche: ' + error.message);\n  }\n};\nconst updateLancheById = async (id, updatedLancheData) => {\n  const res = await axiosInstance.put(`/lanches/${id}`, updatedLancheData);\n  return res.data;\n};\nconst deleteLancheById = async id => {\n  const res = await axiosInstance.delete(`/lanches/${id}`);\n  return res.data;\n};\nexport default {\n  getLancheById,\n  getAllLanches,\n  createLanche,\n  updateLancheById,\n  deleteLancheById\n};","map":{"version":3,"names":["axiosInstance","getLancheById","id","res","get","data","getAllLanches","createLanche","newLancheData","allLanches","lastLanche","length","nextId","parseInt","post","String","error","Error","message","updateLancheById","updatedLancheData","put","deleteLancheById","delete"],"sources":["C:/Users/35443/Desktop/lista2filipereact/Lista2/src/services/LancheService.js"],"sourcesContent":["import axiosInstance from \"../utils/axios\";\r\n\r\nconst getLancheById = async (id) => {\r\n    const res = await axiosInstance.get('/lanches/' + id);\r\n    return res.data;\r\n}\r\n\r\nconst getAllLanches = async () => {\r\n    const res = await axiosInstance.get('/lanches');\r\n    return res.data;\r\n}\r\n\r\nconst createLanche = async (newLancheData) => {\r\n    try {\r\n        const allLanches = await getAllLanches();\r\n        const lastLanche = allLanches[allLanches.length - 1];\r\n        const nextId = lastLanche ? parseInt(lastLanche.id) + 1 : 1;\r\n\r\n        const res = await axiosInstance.post('/lanches', { id: String(nextId), ...newLancheData });\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Erro ao criar lanche: ' + error.message);\r\n    }\r\n}\r\n\r\nconst updateLancheById = async (id, updatedLancheData) => {\r\n    const res = await axiosInstance.put(`/lanches/${id}`, updatedLancheData);\r\n    return res.data;\r\n}\r\n\r\nconst deleteLancheById = async (id) => {\r\n    const res = await axiosInstance.delete(`/lanches/${id}`);\r\n    return res.data;\r\n}\r\n\r\nexport default {\r\n    getLancheById,\r\n    getAllLanches,\r\n    createLanche,\r\n    updateLancheById,\r\n    deleteLancheById\r\n}\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAE1C,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EAChC,MAAMC,GAAG,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,WAAW,GAAGF,EAAE,CAAC;EACrD,OAAOC,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMH,GAAG,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,UAAU,CAAC;EAC/C,OAAOD,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,MAAME,YAAY,GAAG,MAAOC,aAAa,IAAK;EAC1C,IAAI;IACA,MAAMC,UAAU,GAAG,MAAMH,aAAa,CAAC,CAAC;IACxC,MAAMI,UAAU,GAAGD,UAAU,CAACA,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC;IACpD,MAAMC,MAAM,GAAGF,UAAU,GAAGG,QAAQ,CAACH,UAAU,CAACR,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IAE3D,MAAMC,GAAG,GAAG,MAAMH,aAAa,CAACc,IAAI,CAAC,UAAU,EAAE;MAAEZ,EAAE,EAAEa,MAAM,CAACH,MAAM,CAAC;MAAE,GAAGJ;IAAc,CAAC,CAAC;IAC1F,OAAOL,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC7D;AACJ,CAAC;AAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAOjB,EAAE,EAAEkB,iBAAiB,KAAK;EACtD,MAAMjB,GAAG,GAAG,MAAMH,aAAa,CAACqB,GAAG,CAAE,YAAWnB,EAAG,EAAC,EAAEkB,iBAAiB,CAAC;EACxE,OAAOjB,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,MAAMiB,gBAAgB,GAAG,MAAOpB,EAAE,IAAK;EACnC,MAAMC,GAAG,GAAG,MAAMH,aAAa,CAACuB,MAAM,CAAE,YAAWrB,EAAG,EAAC,CAAC;EACxD,OAAOC,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,eAAe;EACXJ,aAAa;EACbK,aAAa;EACbC,YAAY;EACZY,gBAAgB;EAChBG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}