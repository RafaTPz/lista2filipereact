{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { CheckboxClasses } from '../../../shared/esm/classes/CheckboxClasses.js';\nimport { CheckboxColors } from '../../../shared/esm/colors/CheckboxColors.js';\nimport { useDarkClasses } from '../shared/use-dark-classes.js';\nimport { useTheme } from '../shared/use-theme.js';\nimport { useThemeClasses } from '../shared/use-theme-classes.js';\nimport { useTouchRipple } from '../shared/use-touch-ripple.js';\nimport CheckboxIcon from './icons/CheckboxIcon.js';\nconst Checkbox = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    component = 'label',\n    className,\n    colors: colorsProp,\n    defaultChecked,\n    checked,\n    indeterminate,\n    name,\n    value,\n    disabled,\n    readOnly,\n    onChange,\n    ios,\n    material,\n    touchRipple = true,\n    // Children\n    children,\n    // Rest\n    ...rest\n  } = props;\n  const inputElRef = useRef(null);\n  const elRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    el: elRef.current,\n    inputEl: inputElRef.current\n  }));\n  const Component = component;\n  const attrs = {\n    ...rest\n  };\n  const theme = useTheme({\n    ios,\n    material\n  });\n  const themeClasses = useThemeClasses({\n    ios,\n    material\n  });\n  const dark = useDarkClasses();\n  useTouchRipple(elRef, theme === 'material' && touchRipple);\n  const colors = CheckboxColors(colorsProp, dark);\n  const state = checked || defaultChecked && !onChange || indeterminate ? 'checked' : 'notChecked';\n  const c = themeClasses(CheckboxClasses(props, colors, className, dark), className);\n  useEffect(() => {\n    if (inputElRef.current) {\n      inputElRef.current.indeterminate = !!indeterminate;\n    }\n  }, [indeterminate]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: elRef,\n    className: c.base\n  }, attrs), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputElRef,\n    type: \"checkbox\",\n    name: name,\n    value: value,\n    disabled: disabled,\n    readOnly: readOnly,\n    checked: checked,\n    defaultChecked: defaultChecked,\n    onChange: onChange,\n    className: c.input\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: c.iconWrap[state]\n  }, indeterminate ? /*#__PURE__*/React.createElement(\"span\", {\n    className: c.indeterminateIcon\n  }) : /*#__PURE__*/React.createElement(CheckboxIcon, {\n    ios: ios,\n    material: material,\n    className: c.icon[state]\n  })), children);\n});\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useEffect","useRef","forwardRef","useImperativeHandle","CheckboxClasses","CheckboxColors","useDarkClasses","useTheme","useThemeClasses","useTouchRipple","CheckboxIcon","Checkbox","props","ref","component","className","colors","colorsProp","defaultChecked","checked","indeterminate","name","value","disabled","readOnly","onChange","ios","material","touchRipple","children","rest","inputElRef","elRef","el","current","inputEl","Component","attrs","theme","themeClasses","dark","state","c","createElement","base","type","input","iconWrap","indeterminateIcon","icon","displayName"],"sources":["C:/Users/35443/Desktop/lista2filipereact/Lista2/node_modules/konsta/react/esm/components/Checkbox.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\nimport React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport { CheckboxClasses } from '../../../shared/esm/classes/CheckboxClasses.js';\r\nimport { CheckboxColors } from '../../../shared/esm/colors/CheckboxColors.js';\r\nimport { useDarkClasses } from '../shared/use-dark-classes.js';\r\nimport { useTheme } from '../shared/use-theme.js';\r\nimport { useThemeClasses } from '../shared/use-theme-classes.js';\r\nimport { useTouchRipple } from '../shared/use-touch-ripple.js';\r\nimport CheckboxIcon from './icons/CheckboxIcon.js';\r\nconst Checkbox = /*#__PURE__*/forwardRef((props, ref) => {\r\n  const {\r\n    component = 'label',\r\n    className,\r\n    colors: colorsProp,\r\n    defaultChecked,\r\n    checked,\r\n    indeterminate,\r\n    name,\r\n    value,\r\n    disabled,\r\n    readOnly,\r\n    onChange,\r\n    ios,\r\n    material,\r\n    touchRipple = true,\r\n    // Children\r\n    children,\r\n    // Rest\r\n    ...rest\r\n  } = props;\r\n  const inputElRef = useRef(null);\r\n  const elRef = useRef(null);\r\n  useImperativeHandle(ref, () => ({\r\n    el: elRef.current,\r\n    inputEl: inputElRef.current\r\n  }));\r\n  const Component = component;\r\n  const attrs = {\r\n    ...rest\r\n  };\r\n  const theme = useTheme({\r\n    ios,\r\n    material\r\n  });\r\n  const themeClasses = useThemeClasses({\r\n    ios,\r\n    material\r\n  });\r\n  const dark = useDarkClasses();\r\n  useTouchRipple(elRef, theme === 'material' && touchRipple);\r\n  const colors = CheckboxColors(colorsProp, dark);\r\n  const state = checked || defaultChecked && !onChange || indeterminate ? 'checked' : 'notChecked';\r\n  const c = themeClasses(CheckboxClasses(props, colors, className, dark), className);\r\n  useEffect(() => {\r\n    if (inputElRef.current) {\r\n      inputElRef.current.indeterminate = !!indeterminate;\r\n    }\r\n  }, [indeterminate]);\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    ref: elRef,\r\n    className: c.base\r\n  }, attrs), /*#__PURE__*/React.createElement(\"input\", {\r\n    ref: inputElRef,\r\n    type: \"checkbox\",\r\n    name: name,\r\n    value: value,\r\n    disabled: disabled,\r\n    readOnly: readOnly,\r\n    checked: checked,\r\n    defaultChecked: defaultChecked,\r\n    onChange: onChange,\r\n    className: c.input\r\n  }), /*#__PURE__*/React.createElement(\"i\", {\r\n    className: c.iconWrap[state]\r\n  }, indeterminate ? /*#__PURE__*/React.createElement(\"span\", {\r\n    className: c.indeterminateIcon\r\n  }) : /*#__PURE__*/React.createElement(CheckboxIcon, {\r\n    ios: ios,\r\n    material: material,\r\n    className: c.icon[state]\r\n  })), children);\r\n});\r\nCheckbox.displayName = 'Checkbox';\r\nexport default Checkbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}